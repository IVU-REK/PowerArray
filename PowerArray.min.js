var exports=module.exports={};window.pa=function(r){if(r.constructor===Array||r.paIsArray)return new paArray(r);if(console.warn("PowerArray => The passed object does is not natively an array. Trying to handle it as an array-like object..."),void 0!==window.ol&&ol.Collection&&r instanceof ol.Collection)return console.log("Compatible openlayers object detected (ol.Collection)"),paArray(r.getArray());if(void 0===r.length)throw new Error("PowerArray => The passed object is not an array, or usable as such.");return new paArray(r)},window.pa.utils={},window.pa.utils={DataTypes:{String:"String",Number:"Number",Date:"Date",Boolean:"Boolean",Object:"Object",ArrayOfObjects:"ArrayOfObjects",ArrayOfPrimitives:"ArrayOfPrimitives",RegExp:"RegExp",Function:"Function",Null:"Null",Undefined:"Undefined"},IsArrayOfObjects:function(r){var n;if(!r.paIsArray||void 0===r.length)return!1;for(n=r.length;n--;)if(pa.utils.GetTypeOf(r[n])!==pa.utils.DataTypes.Object)return!1;return!0},parseBoolean:function(r,n){if(!pa.utils.isNullEmptyOrUndefined(r)){var e=r.toUpperCase();if("TRUE"===e)return!0;if("FALSE"===e)return!1}if(n)throw new Error("The string passed to function parseBoolean ("+r+") doesn't match with any valid string");return null},isNullEmptyOrUndefined:function(r){if(null===r)return!0;var n=typeof r;if("boolean"===n)return!1;if("number"!==n&&"string"!==n&&"undefined"!==n)throw new Error("PowerArray => The function IsNullOrEmpty is designed to evaluate strings and numbers, but something different was provided ("+n+")");return"number"===n&&0===r?!1:r?0===(r+"").length:!0},GetTypeOf:function(r,n){if(null===r)return pa.utils.DataTypes.Null;if(void 0===r)return pa.utils.DataTypes.Undefined;var e=typeof r;switch(e){case"string":return pa.utils.DataTypes.String;case"number":return pa.utils.DataTypes.Number;case"boolean":return pa.utils.DataTypes.Boolean;case"object":return r instanceof String?pa.utils.DataTypes.String:r instanceof Date?pa.utils.DataTypes.Date:r instanceof Number?pa.utils.DataTypes.Number:r instanceof RegExp?pa.utils.DataTypes.RegExp:r.paIsArray?n&&pa.utils.IsArrayOfObjects(r)?pa.utils.DataTypes.ArrayOfObjects:pa.utils.DataTypes.ArrayOfPrimitives:pa.utils.DataTypes.Object;default:throw new Error("PowerArray Error : Unknown Datatype!")}},IsNumeric:function(r){return!isNaN(parseFloat(r))&&isFinite(r)}},window.pa.paEachParalellsHelper={CheckParalellTaskStates:function(r){var n=window.pa.paEachParalellsHelper.currentParalellIds[r];return n.CompletedTasks===n.TotalProcesses?!0:!1},currentParalellIds:{},actionKeys:{Runeach:"RunEach",TaskState:"TaskState"},eventKeys:{RuneachDone:"RuneachDone",TaskState:"TaskStateResponse"}},window.pa.paWhereHelper={FillConditions:function(r,n){for(var e,t,a,o=n.length;o--;){if(e=n[o],"function"!=typeof e.condition){if(window.pa.utils.GetTypeOf(e.condition)===window.pa.utils.DataTypes.Object){var i=window.pa.utils.GetTypeOf(r[e.column],!0);switch(i){case window.pa.utils.DataTypes.ArrayOfObjects:case window.pa.utils.DataTypes.ArrayOfPrimitives:if(t=r[e.column].Where.call(r[e.column],e.condition,!1,!0),void 0!==t)continue;return!1;case window.pa.utils.DataTypes.Object:if(a=pa([r[e.column]]),t=a.Where.call(a,e.condition,!1,!0),void 0!==t)continue;return!1}}e.condition=pa.EqualTo3(e.condition)}if(!r||!e.condition(r[e.column]))return!1}return!0},ProcessConditionObject:function(r,n,e,t,a){var o,i,s,u,l,c,p=window.pa.paWhereHelper.FillConditions,f=[];for(e||(r=[r]),o=0,c=r.length;c>o;o++){var y=r[o],h=[];for(var d in y)"realConditions"!==d&&y.hasOwnProperty(d)&&(y[d]&&y[d].paIsArray?y[d].RunEach(function(r){h.push({column:d,condition:r})}):h.push({column:d,condition:y[d]}));y.realConditions=h}if(c=this.length,n)for(o=0;c>o;o++){for(s=this[o],i=0,u=r.length;u>i&&!(l=p(s,r[i].realConditions));i++);if(l){if(t)return a?o:s;f.push(a?o:s)}}else for(;c--;)for(s=this[c],i=0,u=r.length;u>i;i++)if(l=p(s,r[i].realConditions)){if(t)return a?c:s;f.push(a?c:s);break}return t?void 0:f},equals:function(r,n,e,t){function a(r,n){var i,s,u,l,c;if((i=toString.call(r))!==toString.call(n))return!1;switch(i){default:return r.valueOf()===n.valueOf();case"[object Number]":return r=+r,n=+n,r?r===n:r===r?1/r===1/n:n!==n;case"[object RegExp]":return r.source==n.source&&r.global==n.global&&r.ignoreCase==n.ignoreCase&&r.multiline==n.multiline&&r.lastIndex==n.lastIndex;case"[object Function]":return!1;case"[object Array]":if(t&&null!==(l=o(r,n)))return l;if((s=r.length)!=n.length)return!1;for(;s--;)if(!((l=r[s])===(c=n[s])&&0!==l||a(l,c)))return!1;return!0;case"[object Object]":if(t&&null!==(l=o(r,n)))return l;if(s=0,e){var p=[];for(u in r)if(r.hasOwnProperty(u)){if(p.push(u),(l=r[u])===(c=n[u])&&0!==l||a(l,c))continue;return!1}for(u in n)if(n.hasOwnProperty(u)&&p[s++]!=u)return!1}else{for(u in r)if(r.hasOwnProperty(u)){if(++s,(l=r[u])===(c=n[u])&&0!==l||a(l,c))continue;return!1}for(u in n)if(n.hasOwnProperty(u)&&--s<0)return!1}return!0}}function o(r,n){function e(r,n){for(var e=t.length;e--;)if(t[e--]===n)return t[e]===r;return t.push(r,n),null}var t=[];return(o=e)(r,n)}return r===n&&0!==r||a(r,n)}},window.pa.auxiliaryFunctions={Contains:function(r,n,e){return function(t){if(!t.paIsArray)throw new Error("PowerArray error => parameter val passed to Contains function should be an array, only they can 'contain' something.");var a=t.length,o=!1,i=typeof r;switch(i){case"number":case"string":case"boolean":o=!0;break;default:if("function"==typeof r.getMonth){o=!0;break}o=!1}if(o)return t.indexOf(r)>-1;for(;a--;)if(pa.paWhereHelper.equals(t[a],r,n,e))return!0;return!1}},Between:function(r,n,e){return r>n&&console.warn("PowerArray warn => Parameters 'from' and 'to' passed to function Between() makes no sense: Parameter 'to' ("+n+") should be greater than from ("+r+")"),e?function(e){return e>r&&n>e}:function(e){return e>=r&&n>=e}},EndsWith:function(r){var n=r+"";return function(r){return r+="",r.substr(r.length-n.length)===n}},StartsWith:function(r){var n=r+"";return function(r){return r+="",0===r.indexOf(n)}},GreaterOrEqualThan:function(r){return function(n){return n>=r}},GreaterThan:function(r){return function(n){return n>r}},SmallerOrEqualThan:function(r){return function(n){return r>=n}},SmallerThan:function(r){return function(n){return r>n}},EqualTo3:function(r){return function(n){return n===r}},NotEqualTo3:function(r){return function(n){return n!==r}},EqualTo2:function(r){return function(n){return n==r}},NotEqualTo2:function(r){return function(n){return n!=r}},IsUndefined:function(){return function(r){return void 0===r}},IsDefined:function(){return function(r){return void 0!==r}},In:function(r){return arguments.length>1&&(r=Array.prototype.slice.call(arguments)),function(n){return-1!==r.indexOf(n)}},NotIn:function(r){return arguments.length>1&&(r=Array.prototype.slice.call(arguments)),function(n){return-1===r.indexOf(n)}},EqualTo:function(r,n,e,t){return function(a){return n?n(a,r):pa.paWhereHelper.equals(r,a,e,t)}},Like:function(r){return r.paIsArray||(r=arguments.length>1?Array.prototype.slice.call(arguments):[r]),function(n){for(var e=r.length;e--;)if(-1===n.indexOf(r[e]))return!1;return!0}},NotLike:function(r){return r.paIsArray||(r=arguments.length>1?Array.prototype.slice.call(arguments):[r]),function(n){for(var e=r.length;e--;)if(n.indexOf(r[e])>-1)return!1;return!0}},LikeIgnoreCase:function(r){var n="";return r.paIsArray||(r=arguments.length>1?Array.prototype.slice.call(arguments):[r]),function(e){for(var t=r.length;t--;)if(n=r[t].toUpperCase(),-1===e.toUpperCase().indexOf(n))return!1;return!0}},NotLikeIgnoreCase:function(r){var n="";return r.paIsArray||(r=arguments.length>1?Array.prototype.slice.call(arguments):[r]),function(e){for(var t=r.length;t--;)if(n=r[t].toUpperCase(),e.toUpperCase().indexOf(n)>-1)return!1;return!0}},IsTruthy:function(){return function(r){return r?!0:!1}},IsFalsy:function(){return function(r){return r?!1:!0}},IsTrue:function(){return function(r){return r===!0}},IsFalse:function(){return function(r){return r===!1}},IsEmpty:function(){return function(r){return void 0===r||""===r||null===r||0===r||r.paIsArray&&0===r.length}},IsNotEmpty:function(){return function(r){return void 0===r||null===r?!1:(r+"").length>0}},IsNull:function(){return function(r){return null===r}},IsNotNull:function(){return function(r){return null!==r}},IsNaN:function(){return function(r){return isNaN(r)}},IsNotNaN:function(){return function(r){return!isNaN(r)}}},window.pa.prototypedFunctions_Array={getIndexByProperty:function(r){var n,e,t=this,a=arguments.length,o=t.length;for(e=0;o>e;e++){var i=t[e];for(n=1;a>n;n++){var s=arguments[n],u="()"===s.substring(s.length-2),l=u?s.substr(0,s.length-2):s;if(i=u?i[l]():i[s],n+1===a&&i==r)return e}}return-1},getPropertyFlat:function(r,n,e,t){var a=this,o=[],i=a.length;if(n===!0)for(var s=0;i>s;s++)(e||-1===o.indexOf(a[s][r]))&&(t===!0||void 0!==a[s][r])&&o.push(a[s][r]);else for(;i--;)(e||-1===o.indexOf(a[i][r]))&&(t===!0||void 0!==a[i][r])&&o.push(a[i][r]);return o},GetByProperty:function(r){var n,e,t=this,a=[],o=arguments.length,i=t.length;for(e=0;i>e;e++){var s=t[e];for(n=1;o>n;n++){var u=arguments[n],l="()"===u.substring(u.length-2),c=l?u.substr(0,u.length-2):u;s=l?s[c]():s[u],n+1===o&&s===r&&a.push(t[e])}}return a},RunEach:function(r,n,e){var t=this.length,a=0,o=new Array(this.length);if(e)for(;t>a;a++)o[t]=r(this[a],a,this);else for(;t--;)o[t]=r(this[t],t,this);return n&&(o=n(o)||o),o},RunEachParalell:function(r,n,e,t,a){if(!self.Worker||this.length<2)return this.RunEach.call(this,r,n);try{JSON.stringify(r)}catch(o){return void console.error("PowerArray => RunEachParalell => Unexpected error trying to serialize the passed task. Task aborted. Error => "+(o.number?o.number:"")+" "+(o.message?o.message:""))}t=t||3;var i,s=this,u="RunEachParalell_"+Math.floor(1e9*Math.random()+1);window.pa.paEachParalellsHelper.currentParalellIds[u]={CompletedTasks:0,TotalProcesses:t};for(var l=this.length,c=parseInt(l/t),p=new Array(l);t--;){i=1>t?0:t*c;var f=s.slice(i,i+c);f.RunTaskForSubsetInWorker(r,e,i,c,a,function(r,e){return r.splice(0,0,e,r.length),p.splice.apply(p,r),window.pa.paEachParalellsHelper.currentParalellIds[u].CompletedTasks++,window.pa.paEachParalellsHelper.CheckParalellTaskStates(u)?(n&&(p=n(p)||p),p):void 0})}},RunTaskForSubsetInWorker:function(r,n,e,t,a,o){var i=URL.createObjectURL(new Blob(["var _array, _func, _len, l; actionKeys, _result = [], indexInOriginalArray = -1;        var actionKeys = "+JSON.stringify(pa.paEachParalellsHelper.actionKeys)+";                                            \r\n        var eventKeys = "+JSON.stringify(pa.paEachParalellsHelper.eventKeys)+";                                            \r\n        var keepOrder = "+n+";                                            \r\n        var startIndexOnOriginalArray = "+e+";\r\n"+(a?'//self.importScripts("'+a.join('","')+'");':"")+"                                            \r\n        var _func = "+r.toString()+';                                            \r\n                                                                               \r\n                self.onmessage = function (msg) {                                            \r\n                   // console.info("worker got message ");\r\n                    var paMessage = msg.data, i=0;                                            \r\n                    switch (paMessage.action) {                                            \r\n                        case actionKeys.Runeach:                                            \r\n                            _array = paMessage.array;                                            \r\n                            _len = _array.length;                                            \r\n                            l = _len;                                            \r\n                            //console.log("startIndexOnOriginalArray:",startIndexOnOriginalArray, "length:",_len);                                                              \r\n                                                                               \r\n                            //debugger; \r\n                            if(keepOrder) {                                                                \r\n                                    for(i=0;i<l;i++) {                                            \r\n                                        indexInOriginalArray = i + startIndexOnOriginalArray;                                            \r\n                                        _result.push(_func(_array[i], indexInOriginalArray));                                            \r\n                                    }                                                         \r\n                            } else {                                                                \r\n                                while (l--) {                                            \r\n                                    indexInOriginalArray = l + startIndexOnOriginalArray;                                            \r\n                                    _result.push(_func(_array[l], indexInOriginalArray));                                            \r\n                                }                                            \r\n                            }                                            \r\n                            self.postMessage({                                            \r\n                                event: eventKeys.RuneachDone,                                            \r\n                                result: _result,                                            \r\n                                startIndexOnOriginalArray: startIndexOnOriginalArray                                            \r\n                            });                                            \r\n                            break;                                            \r\n                        case actionKeys.TaskState:                                            \r\n                            self.postMessage({                                            \r\n                                event: eventKeys.TaskState,                                            \r\n                                value: l * _len / 100                                            \r\n                            });                                            \r\n                            break;                                            \r\n                    }                                            \r\n                };\r\n'],{type:"application/javascript"})),s=new Worker(i);s.postMessage({action:pa.paEachParalellsHelper.actionKeys.Runeach,array:this}),s.onmessage=function(r){var n=r.data;switch(n.event){case pa.paEachParalellsHelper.eventKeys.RuneachDone:o(n.result,n.startIndexOnOriginalArray),s.terminate();break;default:console.error("PowerArray => RunTaskForSubsetInWorker => Unknown message received!")}}},Sort:function(r){var n=[],e=typeof r;switch(e){case"string":var t=r.toUpperCase();switch(t){case pa.Sort.Ascending:case pa.Sort.Asc:return this.sort(function(r,n){return n>r?-1:r>n?1:0});case pa.Sort.AscendingIgnoringCase:case pa.Sort.AscIgnoringCase:return this.sort(function(r,n){try{return r.toLowerCase().localeCompare(n.toLowerCase())}catch(e){if(console&&console.warn)return console.warn("PowerArray => Error trying to sort by "+t+". When sorting by "+t+", all values has to be strings. Probably it's not the case!. Now casting to string, performance may be affected."),r+="",n+="",r.toLowerCase().localeCompare(n.toLowerCase())}});case pa.Sort.Descending:case pa.Sort.Desc:return this.sort(function(r,n){return r>n?-1:n>r?1:0});case pa.Sort.DescendingIgnoringCase:case pa.Sort.DescIgnoringCase:return this.sort(function(r,n){return-1*r.toLowerCase().localeCompare(n.toLowerCase())});default:throw new Error("PowerArray Error: Invalid sort condition. If you pass a first parameter of type String to the Sort function, PowerArray assumes that you have a simple array on your hand (one dimension of primitives). Possible parameter values for function Sort  in that situation, are: 1) To sort Ascending: 'Asc' and 'AscIgnoreCase' (aliases: 'Ascending', 'AscendingIgnoreCase'), and 2) To sort Descending: 'Desc','Descending' (aliases: 'Descending', 'DescendingIgnoreCase') ")}break;case"object":if(r instanceof RegExp)throw new Error("PowerArray Error: Invalid sortConditions object. A RegExp is not allowed as Sort Criterion!");if(!r&&r.hasOwnProperty("length"))throw new Error("PowerArray Error: Invalid sortConditions object");for(var a in r)if(r.hasOwnProperty(a)){var o=r[a].toUpperCase();switch(o){case"ASC":case"ASCENDING":case"ASCENDINGIGNORECASE":case"DESC":case"DESCENDING":case"DESCENDINGIGNORECASE":break;default:throw new Error("PowerArray Configuration Error => Invalid sort direction for property "+a+": '"+r[a]+"', it should be ASC, ASCENDING, ASCENDINGIGNORECASE, DESC, DESCENDING or DESCIGNORECASE")}n.push({column:a,sortDirection:o})}return this.sort(function(r,e){for(var t,a,o=0,i=0,s=n.length;s>i;i++)switch(a=10-i,t=n[i].column,n[i].sortDirection){case"ASC":case"ASCENDING":case"ASCENDINGIGNORECASE":r[t]<e[t]?o-=a:r[t]>e[t]&&(o+=a);break;case"DESC":case"DESCENDING":case"DESCENDINGIGNORECASE":r[t]<e[t]?o+=a:r[t]>e[t]&&(o-=a)}return o});case"undefined":return this.sort();case"function":return this.sort(r);default:throw new Error("Unknown sortConditions object type ("+e+")")}},Exists:function(r){return pa.prototypedFunctions_Array.First.call(this,r)?!0:!1},Remove:function(r){for(var n=this.FirstIndex(r);void 0!==n;)this.splice(n,1),n=this.FirstIndex(r);return this},WhereIndexes:function(r,n,e){return this.Where(r,n,e,!0)},Where:function(r,n,e,t){var a,o,i=this.length,s=[];if(t=t?!0:!1,"object"!=typeof r||r.paIsArray){if(r.paIsArray)s.push.apply(s,pa.paWhereHelper.ProcessConditionObject.call(this,r,n,!0,e,t));else if(n){for(a=0;i>a;a++)if(o=this[a],r(o)){if(e)return o;s.push(o)}}else for(;i--;)if(o=this[i],r(o)){if(e)return o;s.push(o)}}else s=pa.paWhereHelper.ProcessConditionObject.call(this,r,n,!1,e,t);return s},First:function(r){return 0===arguments.length?this.length>0?this[0]:void 0:pa.prototypedFunctions_Array.Where.call(this,r,!0,!0)},FirstIndex:function(r){return 0===arguments.length?this.length>0?0:void 0:pa.prototypedFunctions_Array.Where.call(this,r,!0,!0,!0)}},window.pa.Sort={Ascending:"ASCENDING",Asc:"ASC",AscendingIgnoringCase:"ASCENDINGIGNORINGCASE",AscIgnoringCase:"ASCIGNORINGCASE",Descending:"DESCENDING",Desc:"DESC",DescendingIgnoringCase:"DESCENDINGIGNORINGCASE",DescIgnoringCase:"DESCIGNORINGCASE"},window.Sort=window.Sort||window.pa.Sort;var paArray=function(r){if(!r.paIsArray)throw new Error('PowerArray warning! => Invalid array passed to pa function"');var n=r.slice(0),e=window.pa.prototypedFunctions_Array;for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t]);return n};paArray.prototype.isArray=!0,function(){var r=window.pa.auxiliaryFunctions;for(var n in r)r.hasOwnProperty(n)&&(window.pa[n]=r[n],window[n]?console.warn("PowerArray warning! => property window."+n+" already exists. PowerArrayFunction pa."+n+' cannot register this function on window scope. However, you can still using it by calling "pa.'+n+'"'):window[n]=r[n]);Array.prototype.paIsArray||(Array.prototype.paIsArray=!0);var e=window.pa.prototypedFunctions_Array;for(var t in e)e.hasOwnProperty(t)&&(Array.prototype.hasOwnProperty(t)?console.warn("PowerArray warning! => Array Prototype was modified by other library, and the function name "+t+" is already in use. PowerArray will NOT override the prototype method. However, you can still using the function "+t+" by surrounding your array with a pa constructor call, as following: pa(yourArrayName)."+t+"(...)"):Array.prototype[t]=e[t],paArray.prototype[t]=e[t])}();
